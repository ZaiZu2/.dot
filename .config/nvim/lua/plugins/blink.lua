return {
--     {
--         'saghen/blink.cmp',
--         dependencies = 'rafamadriz/friendly-snippets',
--         version = '*',
--         opts = {
--             -- 'default' for mappings similar to built-in completion
--             -- 'super-tab' for mappings similar to vscode (tab to accept, arrow keys to navigate)
--             -- 'enter' for mappings similar to 'super-tab' but with 'enter' to accept
--             -- See the full "keymap" documentation for information on defining your own keymap.
--             keymap = { preset = 'default' },
--
--             appearance = {
--                 -- Sets the fallback highlight groups to nvim-cmp's highlight groups
--                 -- Useful for when your theme doesn't support blink.cmp
--                 -- Will be removed in a future release
--                 use_nvim_cmp_as_default = true,
--                 nerd_font_variant = 'mono',
--             },
--
--             -- Default list of enabled providers defined so that you can extend it
--             -- elsewhere in your config, without redefining it, due to `opts_extend`
--             sources = {
--                 default = { 'lsp', 'path', 'snippets', 'buffer' },
--             },
--         },
--         opts_extend = { 'sources.default' },
--     },
--     {
--         'neovim/nvim-lspconfig',
--         dependencies = { 'saghen/blink.cmp' },
--
--         -- example using `opts` for defining servers
--         opts = {
--             servers = {
--                 lua_ls = {},
--             },
--         },
--         config = function(_, opts)
--             local lspconfig = require 'lspconfig'
--             for server, config in pairs(opts.servers) do
--                 -- passing config.capabilities to blink.cmp merges with the capabilities in your
--                 -- `opts[server].capabilities, if you've defined it
--                 config.capabilities = require('blink.cmp').get_lsp_capabilities(config.capabilities)
--                 lspconfig[server].setup(config)
--             end
--         end,
--     },
--
--     -- example calling setup directly for each LSP
--     config = function()
--         local capabilities = require('blink.cmp').get_lsp_capabilities()
--         local lspconfig = require 'lspconfig'
--
--         lspconfig['lua_ls'].setup { capabilities = capabilities }
--     end,
}
